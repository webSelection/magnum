/*
    This file is part of Magnum.

    Copyright © 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018
              Vladimír Vondruš <mosra@centrum.cz>

    Permission is hereby granted, free of charge, to any person obtaining a
    copy of this software and associated documentation files (the "Software"),
    to deal in the Software without restriction, including without limitation
    the rights to use, copy, modify, merge, publish, distribute, sublicense,
    and/or sell copies of the Software, and to permit persons to whom the
    Software is furnished to do so, subject to the following conditions:

    The above copyright notice and this permission notice shall be included
    in all copies or substantial portions of the Software.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
    THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
    FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
    DEALINGS IN THE SOFTWARE.
*/

namespace Magnum {

/** @page changelog Changelog

@tableofcontents

See also:

-   @subpage changelog-plugins
-   @subpage changelog-integration
-   @subpage changelog-extras
-   @subpage changelog-examples

@section changelog-latest Changes since 2018.02

@subsection changelog-latest-new New features

-   Initial support for OpenGL ES 3.2 and OpenGL 4.6
-   New OpenGL extension support:
    -   @extension{ARB,texture_filter_anisotropic}
    -   @extension{OES,texture_float}, @extension2{OES,texture_half_float,OES_texture_float}
    -   @extension{EXT,color_buffer_float},
        @extension2{EXT,color_buffer_half_float,EXT_color_buffer_half_float}
        and
        their WebGL counterparts @webgl_extension{EXT,color_buffer_half_float},
        @webgl_extension{WEBGL,color_buffer_float},
        @webgl_extension{EXT,color_buffer_float}

@subsection changelog-latest-changes Changes

-   The @ref Trade namespace is now a separate library, allowing to use core
    Magnum functionality without @ref Corrade::PluginManager

@subsection changelog-latest-compatibility Potential compatibility breakages, removed APIs

-   Removed the @cpp Buffer::Usage @ce enum that was deprecated in 2014.01, use
    the global @ref BufferUsage enum instead
-   Removed the `Magnum/Query.h` header that was deprecated in 2015.05, use one
    of @ref Magnum/PrimitiveQuery.h, @ref Magnum/SampleQuery.h or
    @ref Magnum/TimeQuery.h instead
-   Removed ability to use @ref Buffer::Target as constructor or
    @ref Buffer::setTargetHint() parameter that was deprecated in 2015.05, use
    @ref Buffer::TargetHint instead
-   Removed the @cpp SceneGraph::TransformationType @ce enum that was
    deprecated in 2015.05, use separate `<transform>()` and `<transform>Local()`
    variants instead
-   Removed @cpp SceneGraph::AbstractObject::hasFeatures() @ce, @cpp firstFeature() @ce,
    @cpp lastFeature() @ce, @cpp SceneGraph::Object::hasChildren() @ce,
    @cpp firstChild() @ce and @cpp lastChild() @ce that were deprecated in
    2015.05, use methods on linked list returned by
    @ref SceneGraph::AbstractObject::features() and
    @ref SceneGraph::Object::children() instead
-   Removed @cpp Platform::ScreenedApplication::frontScreen() @ce and
    @cpp Platform::ScreenedApplication::backScreen() @ce that were deprecated
    in 2015.05, use methods on linked list returned by
    @ref Platform::BasicScreenedApplication::screens() "Platform::ScreenedApplication::screens()"
    instead
-   Removed @ref Framebuffer::read() "*Framebuffer::read()" functions taking two
    vectors that was deprecated in 2015.05, use overload taking @ref Range2Di
    instead
-   Removed the @cpp Mesh::maxVertexAttributes() @ce function that was
    deprecated in 2015.05, use @ref AbstractShaderProgram::maxVertexAttributes()
    instead
-   Removed @cpp Math::Vector::dot() @ce, @cpp Math::Complex::dot() @ce,
    @cpp Math::Quaternion::dot() @ce, @cpp Math::Vector::angle() @ce,
    @cpp Math::Complex::angle() @ce, @cpp Math::Quaternion::angle() @ce,
    @cpp Math::Quaternion::lerp() @ce, @cpp Math::Quaternion::slerp() @ce,
    @cpp Math::Vector2::cross() @ce and @cpp Math::Vector3::cross() @ce that
    were deprecated in 2015.05, use @ref Math::dot(), @ref Math::angle(),
    @ref Math::lerp(), @ref Math::slerp() and @ref Math::cross() instead
-   Removed @cpp *Framebuffer::bind(FramebufferTarget) @ce function that was
    deprecated in 2%15.05, use parameter-less @ref Framebuffer::bind() "*Framebuffer::bind()"
    instead
-   Removed @cpp FramebufferTarget::ReadDraw @ce enum value that was deprecated
    in 2015.05, use separate @cpp FramebufferTarget::Read @ce and
    @cpp FramebufferTarget::Draw @ce values instead
-   Removed @ref CubeMapTexture::imageSize() with explicit face parameter that
    was deprecated in 2015.05, use overload that returns one value for all
    faces instead
-   Removed the `Magnum/DebugMessage.h` header that was deprecated in 2015.05,
    use @ref Magnum/DebugOutput.h instead
-   Removed the @cpp DebugMessage::Severity @ce enum that was deprecated in
    2015.05, use @ref DebugOutput::Severity instead
-   Removed @cpp DebugMessage::Callback @ce typedef, @cpp DebugMessage::setCallback() @ce
    and @cpp DebugMessage::setDefaultCallback() @ce function that were
    deprecated in 2015.05, use @ref DebugOutput::Callback,
    @ref DebugOutput::setCallback() and @ref DebugOutput::setDefaultCallback()
    instead
-   Removed @cpp DebugMessage::maxLoggedMessages() @ce and
    @cpp DebugMessage::maxMessageLength() @ce functions that were deprecated in
    2015.05, use @ref DebugOutput::maxLoggedMessages() and
    @ref DebugOutput::maxMessageLength() instead
-   Removed @cpp DebugMessage::setEnabled() @ce function and related values
    from @cpp DebugMessage::Source @ce enum that were deprecated in 2015.05,
    use @ref DebugOutput::setEnabled() along with @ref DebugOutput::Source,
    @ref DebugOutput::Type and @ref DebugOutput::Severity instead
-   Removed parameter-less @cpp *Query @ce constructor and parametrized
    @cpp *Query::begin() @ce function that were deprecated in 2015.05, use
    constructor with parameter and parameter-less @ref Query::begin() "*Query::begin()"
    instead
-   Removed `Timeline::setMinimalFrameTime()` that was deprecated since June
    2015, use @ref Platform::Sdl2Application::setSwapInterval() "Platform::*Application::setSwapInterval()"
    and/or @ref Platform::Sdl2Application::setMinimalLoopPeriod() "Platform::*Application::setMinimalLoopPeriod()"
    instead
-   Removed `SceneGraph::Camera2D::setProjection()`,
    `SceneGraph::Camera3D::setOrthographic()` and
    `SceneGraph::Camera3D::setPerspective()` that were deprecated since June
    2015, use     @ref SceneGraph::Camera::setProjectionMatrix() in combination
    with @ref Matrix3::projection(), @ref Matrix4::orthographicProjection() and
    @ref Matrix4::perspectiveProjection() instead
-   Removed `SceneGraph::AbstractCamera`, `SceneGraph::AbstractBasicCamera2D`,
    `SceneGraph::AbstractBasicCamera3D`, `SceneGraph::AbstractCamera2D` and
    `SceneGraph::AbstractCamera3D` that were deprecated since June 2015, use
    @ref SceneGraph::Camera, @ref SceneGraph::BasicCamera2D,
    @ref SceneGraph::BasicCamera3D, @ref SceneGraph::Camera2D and
    @ref SceneGraph::Camera3D instead
-   Removed `Math::Matrix::IdentityType`, `Math::Matrix::ZeroType`,
    `Math::Matrix::Identity` and `Math::Matrix::Zero` that were deprecated
    since June 2015, use the @ref Math::IdentityInit and @ref Math::ZeroInit
    tags instead
-   Removed `Magnum/ImageReference.h` header and `ImageReference` type that
    were deprecated since July 2015, use @ref Magnum/ImageView.h and
    @ref ImageView instead
-   Removed `Magnum/Color.h` header and `BasicColor3` and `BasiColor4` types
    that were deprecated since August 2015, use @ref Magnum/Math/Color.h,
    @ref Math::Color3 and @ref Math::Color4 instead
-   Removed `Magnum/ColorFormat.h` header and `ColorFormat` and `ColorType`
    enums that were deprecated since August 2015, use
    @ref Magnum/PixelFormat.h, @ref PixelFormat and @ref PixelType instead
-   Removed @ref Image, @ref ImageView, @ref Trade::ImageData constructors,
    @ref Image::setData() and @ref ImageView::setData() taking `void*` that
    were deprecated since August 2015, use constructors and functions taking
    @ref Corrade::Containers::Array / @ref Corrade::Containers::ArrayView
    instead

@subsection changelog-latest-docs Documentation

-   A new @ref developers page containing step-by-step checklists for
    maintainers and core developers
-   Compiling majority of code snippets to ensure they don't get out of sync
    with the code

@section changelog-2018-02 2018.02

Released 2018-02-15, tagged as
[v2018.02](https://github.com/mosra/magnum/releases/tag/v2018.02). See the
[release announcement](http://blog.magnum.graphics/announcements/2018.02/) for
a high-level overview.

@subsection changelog-2018-02-dependencies Dependency changes

-   Completely removed NaCl support (see https://blog.chromium.org/2017/05/goodbye-pnacl-hello-webassembly.html,
    [mosra/magnum#198](https://github.com/mosra/magnum/issues/198))
-   Dropped support for the old MinGW32 (only MinGW-w64 is supported now) (see
    [mosra/magnum#46](https://github.com/mosra/magnum/issues/46)
-   Bumped minimal CMake version to 2.8.12
-   Removed support for macOS 10.8 and older
-   Dropped the `compatibility` branch and all support for MSVC 2013 and GCC <
    4.7

@subsection changelog-2018-02-new New features

-   MSVC 2015 and MSVC 2017 support in `master` branch (see
    [mosra/magnum#96](https://github.com/mosra/magnum/issues/96),
    [mosra/magnum#209](https://github.com/mosra/magnum/pull/209))
-   ANGLE ES2/ES3 support, ability to create desktop GLES contexts on Windows
-   Windows Phone/Store support via ANGLE
-   iOS support (see [mosra/magnum#82](https://github.com/mosra/magnum/issues/82))
-   WebAssembly support when building for Emscripten
-   WebGL 2.0 support
-   New OpenGL extension support:
    -   @extension{EXT,draw_buffers} ES2 extension
    -   @extension{EXT,sRGB_write_control} ES extension
    -   @extension{NV,polygon_mode} ES extension
    -   @extension{KHR,blend_equation_advanced},
        @extension2{KHR,blend_equation_advanced_coherent,KHR_blend_equation_advanced}
        desktop and ES extensions
    -   @extension{ANDROID,extension_pack_es31a} ES3 extension, which
        includes:
        -   @extension{OES,texture_storage_multisample_2d_array}
        -   @extension{OES,texture_stencil8}
        -   @extension{EXT,texture_border_clamp}
        -   @extension{EXT,texture_cube_map_array}
        -   @extension{EXT,texture_buffer}
        -   @extension{EXT,geometry_shader}
        -   @extension{EXT,tessellation_shader}
    -   @extension{NV,shader_noperspective_interpolation} ES3 extension
    -   @extension{EXT,texture_compression_s3tc} desktop and ES extension,
        @webgl_extension{WEBGL,compressed_texture_s3tc} WebGL extension
    -   @extension2{KHR,texture_compression_astc_ldr,KHR_texture_compression_astc_hdr},
        @extension{KHR,texture_compression_astc_hdr} desktop and ES
        extension
    -   @extension{EXT,unpack_subimage} and @extension{NV,pack_subimage}
        ES2 extensions
    -   @extension{ARB,uniform_buffer_object} and its ES3/WebGL2
        counterpart, except for data layout queries
    -   @extension{ARB,texture_barrier}
    -   @extension{ARB,shader_storage_buffer_object} and its ES3.1
        counterpart
    -   @extension{ARB,compute_shader} and its ES3.1 counterpart
    -   @extension{ARB,shader_image_load_store} and its ES3.1 counterpart
    -   @extension{KHR,no_error} desktop and ES extension
    -   @extension{EXT,shader_framebuffer_fetch}, @extension{ARM,shader_framebuffer_fetch}
        and @extension{ARM,shader_framebuffer_fetch_depth_stencil} (partial
        support)
    -   @extension{ARB,transform_feedback2},
        @extension{ARB,transform_feedback3},
        @extension{AMD,transform_feedback3_lines_triangles},
        @extension{ARB,transform_feedback_overflow_query} desktop extension
        and their ES3 counterparts, if applicable
        (see [mosra/magnum#53](https://github.com/mosra/magnum/issues/53))
-   Compressed image support:
    -   Added @ref CompressedPixelFormat enum, @ref CompressedImage,
        @ref CompressedImageView and @ref CompressedBufferImage classes
    -   Added @ref Texture::setCompressedImage() "*Texture::setCompressedImage()",
        @ref Texture::setCompressedSubImage() "*Texture::setCompressedSubImage()"
        and @ref Texture::compressedImage() "Texture::compressedImage()"
        functions
    -   Added @ref Renderer::Hint::TextureCompression enum value
-   Ability to pass arguments to engine startup via
    @ref Context "command-line and environment variables":
    -   The engine now prints what driver workarounds are enabled and gives the
        user an ability to disable them via `--magnum-disable-workarounds`
    -   It's possible to disable OpenGL extensions to work around driver bugs
        using `--magnum-disable-extensions`
    -   It's possible to control amount of log output on engine startup via
        `--magnum-log`
-   Published OpenGL test setup code to a new @ref OpenGLTester library and
    added GPU time benchmarking to it
-   Added @ref PixelStorage class, tracking OpenGL pixel storage state and
    applying it prior to read and upload of image data (see
    [mosra/magnum#104](https://github.com/mosra/magnum/issues/104))
-   Added @ref NoCreate tag to control initialization of GL object classes
-   Added templated version of @ref Buffer::map() "Buffer::map*()" functions
-   New `BUILD_MULTITHREADED` @ref cmake "CMake option" and a corresponding
    @ref MAGNUM_BUILD_MULTITHREADED CMake variable and preprocessor define
-   Added @ref Framebuffer::detach() as a conunterpart to all the
    @ref Framebuffer::attachTexture() "attach*()" functions
-   Added @ref Framebuffer::attachLayeredTexture() for layered texture
    attachments
-   Added @ref AbstractFramebuffer::clearDepth(), @ref AbstractFramebuffer::clearStencil(),
    @ref AbstractFramebuffer::clearDepthStencil(), @ref DefaultFramebuffer::clearColor(),
    @ref Framebuffer::clearColor()
-   Added @ref BufferImage::release() "{Compressed,}BufferImage::release()" and
    an ability to create @ref BufferImage "{Compressed,}BufferImage" from an
    existing @ref Buffer
-   New @ref Buffer::mapRead() convenience alternatives to @ref Buffer::map()
    that return @cpp const @ce pointer and implicitly map as read-only
-   Implemented @ref Renderer::setMemoryBarrier() and
    @ref Renderer::setMemoryBarrierByRegion()
-   Added @ref isVersionES() utility
-   Added @ref Context::isCoreProfile()
-   Added @ref TransformFeedback::maxVertexStreams() limit query

@subsubsection changelog-2018-02-new-audio Audio library

-   Ported to Emscripten (see [mosra/magnum#216](https://github.com/mosra/magnum/pull/216)
-   Added @ref Audio::Source::position(), @ref Audio::Source::velocity(),
    @ref Audio::Source::isRelative(), @ref Audio::Source::gain(),
    @ref Audio::Source::minGain(), @ref Audio::Source::maxGain(),
    @ref Audio::Source::referenceDistance(), @ref Audio::Source::rolloffFactor(),
    @ref Audio::Source::maxDistance(), @ref Audio::Source::direction(),
    @ref Audio::Source::innerConeAngle(), @ref Audio::Source::outerConeAngle(),
    @ref Audio::Source::outerConeGain(), @ref Audio::Source::pitch() getters
    (see [mosra/magnum#107](https://github.com/mosra/magnum/pull/107))
-   Added @ref Audio::Renderer::listenerPosition(), @ref Audio::Renderer::listenerOrientation(),
    @ref Audio::Renderer::listenerVelocity(), @ref Audio::Renderer::listenerGain(),
    @ref Audio::Renderer::dopplerFactor(), @ref Audio::Renderer::speedOfSound(),
    @ref Audio::Renderer::distanceModel() getters (see
    [mosra/magnum#107](https://github.com/mosra/magnum/pull/107))
-   Added debug operator for @ref Audio::Renderer::DistanceModel
-   Added @ref Audio::Playable, @ref Audio::Listener scene graph features and
    @ref Audio::PlayableGroup feature group (see
    [mosra/magnum#110](https://github.com/mosra/magnum/pull/110),
    [mosra/magnum#116](https://github.com/mosra/magnum/pull/116))
-   New namespace @ref Audio::Extensions for OpenAL extensions, similar to
    @ref Extensions for OpenGL (see [mosra/magnum#111](https://github.com/mosra/magnum/pull/111))
-   HRTF support through @ref Audio::Context::Configuration::setHrtf(),
    @ref Audio::Context::isHrtfEnabled(), @ref Audio::Context::hrtfStatus()
    (see [mosra/magnum#121](https://github.com/mosra/magnum/pull/121))
-   Floating-point audio support in @ref Audio::Buffer
-   @ref Audio::WavImporter "WavAudioImporter" plugin now supports more
    formats, is more flexible and gives better errors (see
    [mosra/magnum#174](https://github.com/mosra/magnum/issues/174),
    [mosra/magnum#175](https://github.com/mosra/magnum/pull/175),
    [mosra/magnum#176](https://github.com/mosra/magnum/pull/176),
    [mosra/magnum#177](https://github.com/mosra/magnum/pull/177),
    [mosra/magnum#179](https://github.com/mosra/magnum/pull/179))
-   New @ref magnum-al-info "magnum-al-info" utility, available for all desktop
    platforms and Emscripten

@subsubsection changelog-2018-02-new-debugtools DebugTools library

-   Added @ref DebugTools::bufferData(), @ref DebugTools::bufferSubData()
    and @ref DebugTools::textureSubImage() debugging helpers to emulate missing
    functionality on OpenGL ES
-   New @ref DebugTools::CompareImage class for fuzzy image comparison in
    @ref Corrade::TestSuite

@subsubsection changelog-2018-02-new-math Math library

-   New @ref Math::Bezier class for handling N-dimensional M-order Bézier
    curves (see [mosra/magnum#165](https://github.com/mosra/magnum/pull/165))
-   New @ref Math::Frustum class and @ref Math::Geometry::Intersection::pointFrustum(),
    @ref Math::Geometry::Intersection::boxFrustum() functions (see
    [mosra/magnum#185](https://github.com/mosra/magnum/pull/185)
-   New @ref Math::Half class, @link Math::Literals::operator""_h @endlink
    literal and @ref Math::packHalf() and @ref Math::unpackHalf() functions
-   New @ref Math::Color3::fromSrgb(), @ref Math::Color3::toSrgb(),
    @ref Math::Color4::fromSrgbAlpha(), @ref Math::Color4::toSrgbAlpha()
-   8-bit and float RGB, RGBA, sRGB and sRGBA literals in @ref Math::Literals
    namespace
-   Added @ref Math::Color3::fromXyz() "Math::Color*::fromXyz()",
    @ref Math::Color3::toXyz() "Math::Color*::toXyz()", @ref Math::xyYToXyz()
    and @ref Math::xyzToXyY()
-   New @ref Math::pack() and @ref Math::unpack() functions for (un)packing
    floats to an integral range with given number of bits
-   Implemented @ref Math::sclerp() for dual quaternions (see
    [mosra/magnum#114](https://github.com/mosra/magnum/pull/114),
    [mosra/magnum#117](https://github.com/mosra/magnum/issues/117),
    [mosra/magnum#118](https://github.com/mosra/magnum/pull/118),
    [mosra/magnum#122](https://github.com/mosra/magnum/pull/122)
-   Added @ref Math::sincos() for real and @ref Math::Dual numbers
-   Added @ref Math::clamp() taking three vectors
-   Added @ref Math::min() / @ref Math::max() taking a vector and a scalar
-   Added @ref Math::min(), @ref Math::max() and @ref Math::minmax() for value
    ranges (see [mosra/magnum#193](https://github.com/mosra/magnum/pull/193))
-   Added @ref Math::pow(), @ref Math::log() and @ref Math::exp()
-   Added @ref Math::Algorithms::qr(), @ref Math::Algorithms::gaussJordanInverted(),
    @ref Math::Algorithms::kahanSum()
-   Added @ref Math::Geometry::Distance::pointPlane(),
    @ref Math::Geometry::Distance::pointPlaneScaled(),
    @ref Math::Geometry::Distance::pointPlaneNormalized() functions
-   Added @ref Math::Range::contains() and @ref Math::join() to join two ranges
-   Ability to convert @ref Math::Complex, @ref Math::DualComplex,
    @ref Math::Quaternion, @ref Math::DualQuaternion, @ref Math::Color3,
    @ref Math::Color4 and @ref Math::Range classes from/to external
    representation
-   Ability to construct @ref Math::Dual, @ref Math::Complex and
    @ref Math::Quaternion from a different underlying type
-   Added @ref Math::ZeroInit, @ref Math::NoInit, @ref Math::IdentityInit tags
    to control initialization of all math classes
-   Added @ref Math::lerp(const Vector<size, T>&, const Vector<size, T>&, const BoolVector<size>&)
-   Added @ref Math::Vector::flipped(), @ref Math::RectangularMatrix::flippedCols(),
    @ref Math::RectangularMatrix::flippedRows()
-   Added @ref Math::TypeTraits::name() and @ref Math::TypeTraits::equalsZero()
-   Added @ref Math::RectangularMatrix::setRow()
-   Ability to multiply and divide @ref Math::Dual with a real number
-   Ability to access @ref Math::Dual members via reference
-   Ability to construct @ref Math::DualQuaternion from dual vector and scalar
-   Ability to save and restore @ref Deg and @ref Rad from
    @ref Corrade::Utility::Configuration
-   Explicit bool conversion for @ref Math::BoolVector (see
    [mosra/magnum#182](https://github.com/mosra/magnum/issues/182))
-   Component-wise comparison for @ref Math::RectangularMatrix
-   Ability to construct @ref Math::RectangularMatrix and derived classes
    with one value for all components

@subsubsection changelog-2018-02-new-platform Platform libraries

-   New @ref Platform::GlfwApplication class (see
    [mosra/magnum#141](https://github.com/mosra/magnum/pull/141),
    [mosra/magnum#160](https://github.com/mosra/magnum/pull/160))
-   Text input support in @ref Platform::Sdl2Application and
    @ref Platform::GlfwApplication (see [mosra/magnum#129](https://github.com/mosra/magnum/issues/129))
-   Added @ref Platform::WindowlessWindowsEglApplication and
    @ref Platform::WindowlessIosApplication for ANGLE and iOS
-   New @ref Platform::WindowlessEglApplication that works on headless NVidia,
    Mesa drivers and Emscripten (see [mosra/magnum#133](https://github.com/mosra/magnum/pull/133))
-   New @ref Platform::WindowlessGlxContext "Platform::Windowless*Context"
    classes that manage OpenGL context to make threaded context creation
    possible
-   Ported @ref magnum-gl-info "magnum-info" to Emscripten
-   First-class support for scroll events in
    @ref Platform::Sdl2Application::MouseScrollEvent (see
    [mosra/magnum#157](https://github.com/mosra/magnum/pull/157))
-   Added @ref Platform::Sdl2Application::MouseEvent::clickCount()
-   Added @ref Platform::Sdl2Application::multiGestureEvent()
-   Exposing key repeat in
    @ref Platform::Sdl2Application::KeyEvent::isRepeated() "Platform::*Application::KeyEvent::isRepeated()"
    (see [mosra/magnum#161](https://github.com/mosra/magnum/issues/161),
    [mosra/magnum#162](https://github.com/mosra/magnum/pull/162))
-   Added @ref Platform::Sdl2Application::setMinimalLoopPeriod(), which, along
    with @ref Platform::Sdl2Application::setSwapInterval() replaces
    @cpp Timeline::setMinimalFrameTime() @ce
-   Added @ref Platform::Sdl2Application::window() and
    @ref Platform::GlfwApplication::window() to access the underlying window
    handle
-   Added @ref Platform::Sdl2Application::tickEvent()
-   Added @ref Platform::Context::tryCreate(), which allows the context to be
    destructed and created again in case the version is not what the
    application wants (as opposed to just aborting the application) (see
    [mosra/magnum#105](https://github.com/mosra/magnum/issues/105))
-   Added @ref Platform::Sdl2Application::Configuration::setSRGBCapable()
-   Added @ref Platform::Sdl2Application::Configuration::WindowFlag::Borderless
    and @ref Platform::Sdl2Application::Configuration::WindowFlag::AllowHighDpi
    for iOS and macOS
-   Added @ref Platform::WindowlessGlxApplication::Configuration::setFlags() "Platform::Windowless*Application::Configuration::setFlags()" with
    @ref Platform::WindowlessGlxApplication::Configuration::Flag::Debug "Flag::Debug"
-   @ref magnum-gl-info "magnum-info" now accepts `--short` and
    `--extension-strings` options
-   Added @ref Platform::Sdl2Application::windowSize(),
    @ref Platform::GlfwApplication::windowSize()
-   Extended @ref Platform::Sdl2Application::KeyEvent::Key to be consistent
    with @ref Platform::GlfwApplication
-   Added modifier keys to
    @ref Platform::Sdl2Application::KeyEvent::Key "Platform::*Application::KeyEvent::Key"
-   Added @ref Platform::Sdl2Application::InputEvent::Modifier::Super to be
    consistent with @ref Platform::GlfwApplication (see
    [mosra/magnum#159](https://github.com/mosra/magnum/pull/159))
-   Added @ref Platform::Sdl2Application::KeyEvent::keyName() "Platform::*Application::KeyEvent::keyName()"
-   It's now possible to iterate main loop manually using
    @ref Platform::Sdl2Application::mainLoopIteration()
-   Ability to pass command-line arguments to Emscripten browser apps, see
    @ref Platform::Sdl2Application and @ref Platform::WindowlessEglApplication
    for more information

@subsubsection changelog-2018-02-new-primitives Primitives library

-   New @ref Primitives::axis2D() and @ref Primitives::axis3D() primitives

@subsubsection changelog-2018-02-new-shaders Shaders library

-   Ability to construct all @ref Shader classes without an OpenGL context
    present using @ref NoCreate

@subsubsection changelog-2018-02-new-text Text library

-   New @ref Text::AbstractFont::ascent() and @ref Text::AbstractFont::descent()
    font properties

@subsubsection changelog-2018-02-new-trade Trade library

-   New @ref magnum-imageconverter "magnum-imageconverter" utility
-   Initial implementation of @ref Trade::CameraData and @ref Trade::LightData
-   Vertex color support in @ref Trade::MeshData2D and @ref Trade::MeshData3D
-   @ref Trade::AbstractImageConverter member functions were changed to
    non-@cpp const @ce to make implementation of complex converter plugins possible
-   New @ref Trade::AbstractImageConverter::exportToCompressedImage() plugin
    interface and @ref Trade::AbstractImageConverter::exportToData(),
    @ref Trade::AbstractImageConverter::exportToFile() taking
    @ref CompressedImageView as a parameter
-   Providing access to plugin manager in @ref Trade::AbstractImporter,
    @ref Trade::AbstractImageConverter and @ref Audio::AbstractImporter plugin
    APIs now have access to the plugin manager in order to be able to load
    other plugins
-   @ref Trade::ImageData now handles both compressed and uncompressed
    images, @ref Trade::AbstractImageConverter is able to take it and then
    delegate to proper function based on whether the image is commpressed or
    not
-   @ref Trade::AbstractImporter and all `Trade::*Data` classes now provide
    member `importerState()` functions allowing the user to access
    importer-specific state
-   Added @ref Trade::AbstractImporter::openState() (see
    [mosra/magnum#225](https://github.com/mosra/magnum/pull/225))
-   @ref magnum-distancefieldconverter "magnum-distancefieldconverter" now uses
    @ref Trade::AnyImageConverter "AnyImageConverter" by default
-   @ref Trade::TgaImporter "TgaImporter" sets proper @ref PixelStorage
    alignment if rows are not four-byte aligned
-   @ref Trade::TgaImageConverter "TgaImageConverter" now properly handles
    @ref PixelStorage parameters

@subsection changelog-2018-02-changes Changes and improvements

-   Functionality that is not available on WebGL (like debug output etc.) is
    not present in WebGL builds to reduce compiled code size
-   The @ref Mesh class now stores a copy of @ref Buffer instance instead of
    reference, meaning that you can move your buffers freely after assigning
    them to a mesh
-   @ref Texture::setStorage() "*Texture::setStorage()" fallback implementation
    on OpenGL ES 2.0 and WebGL 1.0 now properly translates sized texture
    formats to what the drivers expect (see [mosra/magnum#214](https://github.com/mosra/magnum/issues/214))
-   @ref Trade::TgaImporter "TgaImporter" and @ref Trade::TgaImageConverter "TgaImageConverter"
    now consistently use RGB(A) on all platforms and don't require BGR(A) on
    desktop
-   Ignoring @cpp "No errors." @ce message produced by GLSL compiler/linker on
    Intel Windows drivers.
-   @ref Texture::image() "*Texture::image()" and @ref Framebuffer::read() "*Framebuffer::read()"
    now reallocate image data only if needed, for both @ref Image and
    @ref BufferImage types
-   R-value @ref Image "Image*" no longer restricts conversion to
    @ref ImageView as it is a valid use case (for example passing output from
    @ref Framebuffer::read() directly to @ref Trade::AbstractImageConverter::exportToFile())
-   It's no longer possible to call @ref Image::data() "Image*::data()" on
    r-value instances as that would cause accessing freed data. Use
    @ref Image::release() instead.
-   @ref Buffer::map() now returns @ref Corrade::Containers::ArrayView instead
    of a plain pointer for better security
-   Improved @ref Context::resetState() to better handle corner cases with VAOs
-   Graceful handling of broken GL contexts
-   Behavior of @ref Version::GLES200 and upwards on desktop OpenGL is changed
    to request an ES dialect of GLSL when used in @ref Shader (instead of a
    particular desktop GL version that supports given ES version), looks for
    @extension{ARB,ES2_compatibility} and others (instead of checking for a
    particular desktop GL version that supports given ES version)
-   Binding some default VAO in case the engine is running on core profile with
    @extension{ARB,vertex_array_object} disabled
-   It's now possible to create @ref ImageView with @cpp nullptr @ce data (for
    example for old-style texture allocation using @ref Texture::setImage())
-   Various workarounds to make the engine working better on SVGA3D drivers
    (VMWare guest)
-   Various updates and code modernization (see
    [mosra/magnum#200](https://github.com/mosra/magnum/pull/200))

@subsubsection changelog-2018-02-changes-math Math library

-   @ref Double types are no longer restricted to just desktop GL builds, all
    related types also work on ES and WebGL builds
-   Default-constructed @ref Color4 has zero alpha now instead of fully opaque
    black
-   Proper implementation of @ref Math::Vector::isZero() for integers
-   @ref Math::Matrix4::transformPoint() now properly uses the perspective
    divide from projection matrices
-   Updated @ref Math::TypeTraits fuzzy comparison epsilon values for
    @cpp long double @ce and @cpp double @ce
-   @ref Math::Matrix4::perspectiveProjection() now supports infinite far plane
-   @ref Math::pow() now works for both vectors and scalars
-   @ref Math::Vector::minmax() now works on arbitrary vectors instead of just
    @ref Math::Vector2

@subsubsection changelog-2018-02-changes-platform Platform library

-   Requesting core OpenGL context by default in @ref Platform::WindowlessGlxApplication
    and @ref Platform::Sdl2Application. On binary NVidia, AMD and Windows Intel
    drivers this causes the context to be stuck on OpenGL 3.1, in which case
    the context is destroyed and old-style forward-compatible context is
    requested instead.
-   @ref Platform::Sdl2Application now leaves windows positioning on the system
    instead of forcing the window to be centered
-   @ref Platform::Sdl2Application now shows the window only once the GL
    context is fully created to avoid flickering

@subsubsection changelog-2018-02-changes-shaders Shaders library

-   @ref Shaders::Flat now sets default color to white only in textured version
-   @ref Shaders::Phong gained the ability to have both color and texture
-   @ref Shaders::Phong is now able to do alpha-masking (see
    [mosra/magnum#112](https://github.com/mosra/magnum/issues/112),
    [mosra/magnum-examples#29](https://github.com/mosra/magnum-examples/issues/29))

@subsection changelog-2018-02-buildsystem Build system

-   Continuous testing for Linux, macOS, Windows MSVC, Windows MinGW, Windows RT,
    iOS, Android and Emscripten on [Travis CI](https://travis-ci.org/mosra/magnum)
    and [AppVeyor CI](https://ci.appveyor.com/project/mosra/magnum), with code
    coverage on [codecov.io](https://codecov.io/gh/mosra/magnum); replacing the
    unmaintained and outdated Jenkins configuration (see
    [mosra/magnum#99](https://github.com/mosra/magnum/issues/99),
    [mosra/magnum#120](https://github.com/mosra/magnum/pull/120),
    [mosra/magnum#142](https://github.com/mosra/magnum/pull/142),
    [mosra/magnum#203](https://github.com/mosra/magnum/pull/203))
-   Support for CMake subprojects. You can now clone Magnum into a subdirectory
    in your project and add it using @cmake add_subdirectory() @ce. The
    @cmake find_package() @ce command will then use the CMake subproject
    instead of looking for it in system-wide locations. See
    [mosra/magnum#49](https://github.com/mosra/magnum/issues/49).
    [mosra/magnum#140](https://github.com/mosra/magnum/issues/140).
-   Reworked CMake buildsystem to use the new imported target workflow, see
    @ref cmake for more information (see
    [mosra/magnum#103](https://github.com/mosra/magnum/issues/103))
-   CMake targets are now organized in folders for better development
    experience in IDEs such as Visual Studio or Xcode
-   Added @ref building-packages-brew "Homebrew package"
-   Improvements and dependency updates to the
    @ref building-packages-deb "Debian package" (see
    [mosra/magnum#119](https://github.com/mosra/magnum/issues/119))
-   Ability to build OpenGL tests also on Windows and macOS (see `BUILD_GL_TESTS`
    @ref building-features "CMake option")
-   Ability to override the implicit plugin directory using a
    `MAGNUM_PLUGINS_DIR` CMake cache variable
-   Ability to override deploy directory (used for example by Emscripten) using
    a `MAGNUM_DEPLOY_PREFIX` CMake cache variable
-   Better handling of compiled-in resources in static build. You don't need to
    manually register resources when using Shaders library in static builds
    (see [mosra/magnum-examples#9](https://github.com/mosra/magnum-examples/issues/9))
-   `MACOSX_RPATH` is now enabled by default on CMake 3.0+ (see
    [mosra/magnum#126](https://github.com/mosra/magnum/pull/126)
-   Enabling only C++ in CMake @cmake project() @ce call, if possible, to speed
    up initial CMake run
-   Windowless application libraries now make use of the `BUILD_STATIC_PIC`
    @ref cmake "CMake option"
-   Fixed `FindSDL2.cmake` module to work out-of-the-box on Windows and macOS
    (see [mosra/magnum#166](https://github.com/mosra/magnum/pull/166))
-   Fixed `FindSDL2.cmake` to link to EGL when targeting GLES (see
    [mosra/magnum-examples#9](https://github.com/mosra/magnum-examples/issues/9))
-   Bundling a patched version of `FindOpenAL.cmake` to make it working on
    Emscripten

@subsection changelog-2018-02-bugfixes Bug fixes

-   Wrapping mode for @ref CubeMapTexture is now correctly two-dimensional
    instead of three-dimensional, wrapping mode for @ref Texture2DArray "TextureNDArray"
    is now correctly N-dimensional instead of N+1
-   Fixed WebGL context creation on Internet Explorer, it claims to have
    version 0.94
-   Fixed random browser-specific issues by avoiding the use of XHTML in
    Emscripten builds
-   @ref Trade::ObjImporter "ObjImporter" plugin now opens the files as binary
    to avoid line ending issues
-   Various compatibility updates to the @ref Shaders library
-   Updates to OpenGL tests to work better on non-NVidia cards
-   Various fixes for OpenGL object label queries on AMD drivers
-   Fixed @ref TextureTools::distanceField() on 3.0 &lt;= GL < 3.2
-   Fixed driver crash on AMD with @ref TextureTools::distanceField()
-   @ref Framebuffer::attachCubeMapTexture() incorrectly behaved as a layered
    attachment (see [mosra/magnum#123](https://github.com/mosra/magnum/issues/123))
-   Fixed object label queries using the @extension{EXT,debug_label}
    extension
-   @extension{EXT,direct_state_access} function was accidentally used in
    @extension{ARB,direct_state_access} code path, causing crashes on Mesa
-   Properly export @ref Framebuffer::DrawAttachment to avoid linker failures
    on Windows
-   Fixed @ref Framebuffer attachments on GLES2 drivers w/o separate read/draw
    bindings (see [mosra/magnum#204](https://github.com/mosra/magnum/issues/204))
-   Fixed @ref Framebuffer binding on WebGL (see
    [mosra/magnum#134](https://github.com/mosra/magnum/pull/134))
-   On Emscripten, @ref Platform::Sdl2Application was by default rendering a
    800x600 canvas to an area of 640x480 pixels, causing severe aliasing.
    Canvas is now by default sized to 640x480 to match the default CSS style.
-   @ref Platform::WindowlessWglApplication is fixed to allow the GL context to
    be created and destroyed multiple times during application run
-   @ref SceneGraph::Camera now works properly with @ref Double underlying type
-   It's now possible to delete a running @ref SceneGraph::Animable
-   @ref Text::AbstractLayouter has now a virtual destructor to avoid leaking
    its subclasses
-   Fixed @ref Trade::ObjImporter on Android
-   Fixed assertion when using @ref DebugTools::ObjectRenderer
-   Fixed appearance of @ref Primitives::Cylinder::solid() and
    @ref Primitives::Circle::solid() (see [mosra/magnum#197](https://github.com/mosra/magnum/pull/197),
    [mosra/magnum#220](https://github.com/mosra/magnum/pull/220))
-   Fixed a possible OOB access when reading @ref Math::Vector /
    @ref Math::RectangularMatrix from @ref Corrade::Utility::Configuration
-   Fixed unfortunate interaction of VAOs and index buffers on platforms
    without direct state access
-   Fixed resetting a bit in @ref Math::BoolVector::set() (see
    [mosra/magnum#208](https://github.com/mosra/magnum/issues/208),
    [mosra/magnum#
-   @ref Audio::Context::hrtfSpecifierString() was crashing on systems
    supporting only @alc_extension{SOFTX,HRTF} and not @alc_extension{SOFT,HRTF}
-   Fixed bad interaction of builtin OpenGL headers and Qt on macOS (see
    [mosra/magnum#212](https://github.com/mosra/magnum/issues/212))
-   Fixed building for Android with standard build systems (see
    [mosra/magnum#131](https://github.com/mosra/magnum/issues/131))
-   Fixed building of WGL context library (see
    [mosra/magnum#137](https://github.com/mosra/magnum/pull/137))
-   Various compilation warning/error fixes on various compilers (see
    [mosra/magnum#100](https://github.com/mosra/magnum/issues/100),
    [mosra/magnum#109](https://github.com/mosra/magnum/issues/109),
    [mosra/magnum#138](https://github.com/mosra/magnum/pull/138),
    [mosra/magnum#189](https://github.com/mosra/magnum/issues/189),
    [mosra/magnum#190](https://github.com/mosra/magnum/pull/190))

@subsection changelog-2018-02-deprecated Deprecated APIs

-   `Timeline::setMinimalFrameTime()` is deprecated, use
    @ref Platform::Sdl2Application::setSwapInterval() "Platform::*Application::setSwapInterval()"
    and/or @ref Platform::Sdl2Application::setMinimalLoopPeriod() "Platform::*Application::setMinimalLoopPeriod()"
    instead
-   `SceneGraph::Camera2D::setProjection()`,
    `SceneGraph::Camera3D::setOrthographic()` and
    `SceneGraph::Camera3D::setPerspective()` are deprecated, use
    @ref SceneGraph::Camera::setProjectionMatrix() in combination with
    @ref Matrix3::projection(), @ref Matrix4::orthographicProjection() and
    @ref Matrix4::perspectiveProjection() instead
-   `SceneGraph::AbstractCamera`, `SceneGraph::AbstractBasicCamera2D`,
    `SceneGraph::AbstractBasicCamera3D`, `SceneGraph::AbstractCamera2D` and
    `SceneGraph::AbstractCamera3D` are deprecated, use @ref SceneGraph::Camera,
    @ref SceneGraph::BasicCamera2D, @ref SceneGraph::BasicCamera3D,
    @ref SceneGraph::Camera2D and @ref SceneGraph::Camera3D instead
-   `Math::Matrix::IdentityType`, `Math::Matrix::ZeroType`,
    `Math::Matrix::Identity` and `Math::Matrix::Zero` are deprecated, use the
    new @ref Math::IdentityInit and @ref Math::ZeroInit tags instead
-   `AbstractShaderProgram::setUniform(Int, UnsignedInt, const T*)` is
    deprecated, use @ref AbstractShaderProgram::setUniform(Int, Containers::ArrayView<const Float>) "AbstractShaderProgram::setUniform(Int, Containers::ArrayView<const T>)"
    instead
-   `Magnum/ImageReference.h` header and `ImageReference` type is deprecated,
    use @ref Magnum/ImageView.h and @ref ImageView instead
-   `Magnum/Color.h` header and `BasicColor3` and `BasiColor4` types are
    deprecated, use @ref Magnum/Math/Color.h, @ref Math::Color3 and
    @ref Math::Color4 instead
-   `Magnum/ColorFormat.h` header and `ColorFormat` and `ColorType` enums are
    deprecated, use @ref Magnum/PixelFormat.h, @ref PixelFormat and @ref PixelType
    instead
-   @ref Image, @ref ImageView, @ref Trade::ImageData constructors, @ref Image::setData()
    and @ref ImageView::setData() taking `void*` are deprecated, use
    constructors and functions taking @ref Corrade::Containers::Array /
    @ref Corrade::Containers::ArrayView instead
-   Templated @ref Buffer::data(), @ref Buffer::subData() and
    @ref Buffer::map() are deprecated, use the non-templated versions in
    combination with @ref Corrade::Containers::arrayCast() instead (see
    [mosra/magnum#213](https://github.com/mosra/magnum/issues/213))
-   `CubeMapTexture::Coordinate` enum is deprecated, use @ref CubeMapCoordinate
    instead
-   @ref Context::current() and @ref Audio::Context::current() returning a
    pointer is deprecated, it's returning a reference now and asserts that a
    context exists. Use @ref Context::hasCurrent() and @ref Audio::Context::hasCurrent()
    to check for context presence.
-   Angle literals available directly in the @ref Magnum namespace are
    deprecated, import the @ref Math::Literals namespace instead
-   `Platform::Sdl2Application::MouseEvent::Button::WheelUp`,
    `Platform::Sdl2Application::MouseEvent::Button::WheelDown`,
    `Platform::GlfwApplication::MouseEvent::Button::WheelUp` and
    `Platform::GlfwApplication::MouseEvent::Button::WheelDown` mouse events are
    deprecated, use @ref Platform::Sdl2Application::mouseScrollEvent() /
    @ref Platform::GlfwApplication::mouseScrollEvent() and
    @ref Platform::Sdl2Application::MouseScrollEvent /
    @ref Platform::GlfwApplication::MouseScrollEvent instead
-   @ref Platform::Sdl2Application::Sdl2Application() "Platform::*Application::*Application()"
    and @ref Platform::WindowlessGlxApplication::WindowlessGlxApplication() "Platform::Windowless*Application::Windowless*Application()"
    constructors taking @cpp nullptr @ce are deprecated, use constructors
    taking @ref NoCreateT instead to create an application without creating
    OpenGL context
-   `Math::Color*::fromHSV()` and `Math::Color*::toHSV()` are deprecated, use
    @ref Math::Color3::fromHsv() "Math::Color*::fromHsv()" and
    @ref Math::Color3::toHsv() "Math::Color*::toHsv()" instead
-   `Math::normalize()` and `Math::denormalize()` had confusing naming and thus
    are deprecated, use @ref Math::pack() and @ref Math::unpack() from the
    @ref Magnum/Math/Packing.h header instead
-   @ref Trade::MeshData2D and @ref Trade::MeshData3D constructors without the
    `colors` parameter are deprecated, use the full ones instead
-   @ref Shaders::Generic::Color vertex attribute implicit constructor is
    deprecated, use a constructor with explicit component count instead
-   The bundled `std::optional` implementation was causing serious conflicts
    with C++17 and it's now deprecated in favor of
    @ref Corrade::Containers::Optional.
    (Deprecated) aliases and conversion operators are provided for backwards
    compatibility.
-   `Audio::Context::hrtfSpecifier()` is deprecated, use
    @ref Audio::Context::hrtfSpecifierString() instead

@subsection changelog-2018-02-compatibility Potential compatibility breakages, removed APIs

-   The @ref Math::Geometry::Distance and @ref Math::Geometry::Intersection
    classes are now a namespace (might break `using` declarations, but
    otherwise it's fully source-compatible)
-   Removed `Context::majorVersion()` and `Context::minorVersion()` functions,
    use @ref Context::version() instead
-   Removed deprecated `Magnum/DebugMarker.h` header, use
    @ref Magnum/DebugOutput.h and @ref DebugMessage class instead
-   Removed deprecated `*Buffer` values from @ref FramebufferBlit, use values
    without the `Buffer` suffix
-   Removed deprecated list-argument functions taking pointers from @ref Audio
    and @ref SceneGraph libraries, use lists of references instead
-   Removed deprecated texture unit enums from @ref Shaders library, use
    dedicated texture setters instead
-   Removed deprecated `*Texture::maxLayers()` functions, use
    @ref Shader::maxCombinedTextureImageUnits() instead
-   Removed deprecated @ref MeshTools::combineIndexedArrays(),
    @ref MeshTools::compressIndices(), @ref MeshTools::interleave() and
    @ref MeshTools::removeDuplicates() overloads, use the general ones instead
-   Removed deprecated `Mesh*::set*{Range,Count}()` functions, use
    @ref Mesh::setCount() "Mesh*::setCount()" and @ref MeshView::setIndexRange()
    instead
-   Removed deprecated parameterless @ref Mesh::draw() "Mesh*::draw()"
    overload, use the one with explicit shader parameter instead
-   Removed deprecated `Context::Flag::Robustness` enum value, use
    @ref Context::Flag::RobustAccess instead
-   Removed deprecated `Texture::Target` enum, use dedicated @ref Texture,
    @ref TextureArray, @ref RectangleTexture and @ref MultisampleTexture
    classes instead
-   Removed deprecated @ref Resource conversion operator, use explicit
    conversion instead
-   Removed deprecated `Framebuffer::attachTexture*D()` overloads, use one of
    @ref Framebuffer::attachTexture() or @ref Framebuffer::attachTextureLayer()
    overloads instead.
-   Removed `SceneGraph::Camera3D::near()` and `SceneGraph::Camera3D::far()`
    getters, because they can't be provided anymore with current more general
    implementation. THe user is advised to cache the values on application side
    if they are really needed.
-   Removed `AbstractImage` class and `Magnum/AbstractImage.h` header, its
    functionality is present in the @ref Image "Image*" classes directly
-   Removed `Image::dataSize()` function as it has ambiguous meaning in regards
    to recently added features, use @ref Image::dataProperties() "Image::dataProperties()"
    instead
-   The `FindGLFW.cmake` now prefers absolute includes (i.e. `GLFW/glfw3.h`
    instead of just `glfw3.h`). The @ref Platform::GlfwApplication now depends
    on this, so be sure to update your copy to avoid build issues.

@subsection changelog-2018-02-performance Performance improvements

-   Reduced size of and number of allocations in @ref Mesh class.

@subsection changelog-2018-02-docs Documentation

-   New documentation theme powered by [m.css](http://mcss.mosra.cz) and
    related massive updates of *everything* (see
    [mosra/magnum#113](https://github.com/mosra/magnum/issues/113))
-   Explicit list of extensions that are available in WebGL builds
-   New page explaining @ref opengl-wrapping "OpenGL wrapper layer"
-   Documented extra CMake modules in @ref cmake-modules
-   The @ref building documentation now prefers package installation instead of
    manual build
-   Clarified behavior of @ref Math::Matrix4::lookAt() (see
    [mosra/magnum#127](https://github.com/mosra/magnum/issues/127))
-   Documented how to use Vcpkg packages
-   Updated links to OpenGL API documentation (see
    [mosra/magnum#196](https://github.com/mosra/magnum/pull/196)
-   Various other documentation updates (see
    [mosra/magnum#94](https://github.com/mosra/magnum/pull/94),
    [mosra/magnum#135](https://github.com/mosra/magnum/pull/135),
    [mosra/magnum#170](https://github.com/mosra/magnum/issues/170),
    [mosra/magnum-plugins#17](https://github.com/mosra/magnum-plugins/issues/17))

@section changelog-2015-05 2015.05

Released 2015-05-09, tagged as
[v2015.05](https://github.com/mosra/magnum/releases/tag/v2015.05). See the
[release announcement](http://blog.magnum.graphics/announcements/may-2015-updates/)
for a high-level overview.

@subsection changelog-2015-05-new New features

-   Proper extension loading for OpenGL ES 2.0, 3.0 and 3.1 using flextGL.
-   Enabled already implemented functionality on OpenGL ES 3.1.
-   Support for new OpenGL functionality:

    -   Support for @extension{ARB,direct_state_acccess} (OpenGL 4.5)
        everywhere except in Mesh.
    -   Support for @extension{ARB,conditional_render_inverted} (OpenGL
        4.5) in @ref SampleQuery.
    -   Support for @extension{ARB,get_texture_sub_image} (OpenGL 4.5) in
        @ref Texture::subImage() "*Texture::subImage()".
    -   Support for @extension{EXT,transform_feedback},
        @extension{ARB,transform_feedback2} (OpenGL 3.0, 4.0, OpenGL ES 3.0) in
        new @ref TransformFeedback class, added
        @ref Renderer::Feature::RasterizerDiscard.
    -   Support for @extension{ARB,robustness_isolation} in
        @ref Renderer::graphicsResetStatus().
    -   Support for @extension{ARB,framebuffer_sRGB} (OpenGL 3.0) in
        @ref Renderer::Feature::FramebufferSRGB.
    -   Support for @extension{OES,texture_npot} ES extension.
    -   Support for debug groups from @extension{KHR,debug} (OpenGL 4.5) and
        @extension{EXT,debug_marker} extensions in @ref DebugGroup class.

-   Added @ref CubeMapTexture::image() "CubeMapTexture::*image()" that
    returns all six faces together.
-   Added @ref Primitives::Cube::solidStrip().
-   Added @ref AbstractShaderProgram::attachShaders() as a list-based
    complement to @ref Shader::compile() and
    @ref AbstractShaderProgram::link().
-   Separated @cpp Renderer::setFeature() @ce into shorter
    @ref Renderer::enable() and @ref Renderer::disable().
-   Added @cpp tau() @ce, @cpp piHalf() @ce, @cpp e() @ce, @cpp nan() @ce and
    @cpp inf() @ce to @ref Math::Constants.
-   Added @ref Math::Matrix4::shearingXY() "Math::Matrix[34]::shearing*()".
-   Added @ref Math::Matrix4::lookAt() (see [mosra/magnum#88](https://github.com/mosra/magnum/issues/88)).
-   Added @ref Math::Vector::pad().
-   Added @ref Math::div().
-   Using range-based-for to traverse object children and features in
    @ref SceneGraph and screens in @ref Platform::BasicScreenedApplication "Platform::ScreenedApplication".
-   Convenience overload for @ref Framebuffer::read() "*Framebuffer::read()"
    and @ref Texture::image() "*Texture::image()" that returns the queried
    image by value instead of as parameter.
-   Added @ref Buffer::uniformOffsetAlignment() and
    @ref Mesh::maxElementIndex() limit queries.
-   Added @ref AbstractTexture::unbind() for unbinding range of texture
    units.
-   Added @ref SceneGraph::AbstractObject::addFeature() and
    @ref SceneGraph::Object::addChild() functions (see [mosra/magnum#86](https://github.com/mosra/magnum/issues/86)).
-   VSync support in @ref Platform::Sdl2Application.
-   Added `Platform::*Context` libraries for users which want to use custom
    windowing toolkits instead of the ones provided.
-   Improved documentation about @ref Shaders namespace, added sample image
    for each.

@subsection changelog-2015-05-changes Changes

-   Using [flextGL](https://github.com/ginkgo/flextgl) instead of `glLoadGen`
    for OpenGL extension loading
-   @ref Platform::Sdl2Application now tries to create core context on all
    platforms, not just OSX (see [mosra/magnum#80](https://github.com/mosra/magnum/issues/80)).
-   @ref Buffer::bind(), @ref Buffer::unbind() and @ref Buffer::Target is
    now used for indexed buffer binding only.
-   Moved static binary operations from @ref Math classes into free functions
    for more convenient usage (see [mosra/magnum#74](https://github.com/mosra/magnum/issues/74)).
-   Better algorithm for comparing floating-point values.
-   Ensuring that all OpenGL objects are properly created before using them.
-   Using @cpp const char @ce instead of @cpp const unsigned char @ce for raw
    binary data.
-   Removed annoying restriction when adding reference-counted resources to
    @ref ResourceManager.
-   Extension querying cleanup:
    -   Removed @extension{APPLE,flush_buffer_range} extension.
    -   Replaced @extension{APPLE,vertex_array_object} with
        @extension{ARB,vertex_array_object}.
    -   Replaced @extension{NV,half_float} with @extension{ARB,half_float_vertex}.
    -   Replaced @extension{EXT,framebuffer_sRGB} with @extension{ARB,framebuffer_sRGB}.
-   Documentation cleanup, fixes and improvements.

@subsection changelog-2015-05-buildsystem Build system

-   CMake now always installs `FindMagnum.cmake` to library-specific
    location, making it usable without providing own copy of the file in
    depending projects. The `WITH_FIND_MODULE` option is no longer needed.
-   CMake now handles inter-library dependencies automatically without manually
    specifying each and every one (see [mosra/magnum#73](https://github.com/mosra/magnum/issues/73)).
-   Ability to control static build of plugins separately using
    `BUILD_PLUGINS_STATIC`.
-   Displaying all header files, plugin metadata files and resource files in
    project view to make use of some IDEs less painful (such as QtCreator).
-   Gentoo ebuild (see [mosra/magnum#69](https://github.com/mosra/magnum/issues/69),
    [mosra/magnum#83](https://github.com/mosra/magnum/issues/83)).

@subsection changelog-2015-05-bugfixes Bug fixes

-   Fixed @ref TextureTools::distanceField() to work in GLSL < 4.20 (see
    [mosra/magnum#62](https://github.com/mosra/magnum/issues/62)).
-   Fixed @ref Shaders::MeshVisualizer to work in GLSL ES.
-   Fixed @ref Shaders::Vector "Shaders::*Vector" on Intel GPUs.
-   Fixed assertion on contexts without default framebuffer (see
    [mosra/magnum#93](https://github.com/mosra/magnum/issues/93)).
-   Fixed cases where shader would use extension that is not advertised by the
    driver.
-   Properly handle case where
    @fn_gl_extension{VertexArrayVertexAttribDivisor,EXT,direct_state_access} is
    not available in the driver (see [mosra/magnum#77](https://github.com/mosra/magnum/issues/77)).
-   Removed superfluous level argument from @ref Framebuffer::attachTexture() "Framebuffer::attachTexture*()"
    overloads for texture types that don't support mipmapping.
-   Proper no-op fallback for @ref Framebuffer::invalidate() "*Framebuffer::invalidate()"
    on platforms where the extensions is not supported (see
    [mosra/magnum#63](https://github.com/mosra/magnum/issues/63)).
-   Fixed garbage characters in shader compilation output (see
    [mosra/magnum#87](https://github.com/mosra/magnum/issues/87)).
-   Fixed memory corruption on MSVC 2013 (see [mosra/magnum#70](https://github.com/mosra/magnum/issues/70)).
-   Fixed potential memory corruption errors with static build (see
    [mosra/magnum#79](https://github.com/mosra/magnum/issues/79)).
-   Fixed aspect-ratio-corrected projection with inverted Y in
    @ref SceneGraph::Camera3D "SceneGraph::Camera*D".
-   Fixed wheel direction in @ref Platform::Sdl2Application (see
    [mosra/magnum#68](https://github.com/mosra/magnum/issues/68)).
-   Fixed bogus version check in @ref Platform::WindowlessCglApplication (see
    [mosra/magnum#92](https://github.com/mosra/magnum/issues/92))
-   Fixed matrix to quaternion conversion algorithm.
-   Two different headers in @ref Magnum::Primitives had the same include guard
    by accident (see [mosra/magnum#72](https://github.com/mosra/magnum/issues/53))
-   Various compilation fixes on various platforms (see
    [mosra/magnum#71](https://github.com/mosra/magnum/pull/71))

@subsection changelog-2015-05-deprecated Deprecated APIs

-   The `Magnum/Query.h` header is deprecated, use one of
    @ref Magnum/PrimitiveQuery.h, @ref Magnum/SampleQuery.h or
    @ref Magnum/TimeQuery.h instead.
-   Using @ref Buffer::Target as constructor or @ref Buffer::setTargetHint()
    parameter is deprecated, use @ref Buffer::TargetHint instead.
-   The @cpp SceneGraph::TransformationType @ce enum is depracted, use separate
    `<transform>()` and `<transform>Local()` variants instead.
-   @cpp SceneGraph::AbstractObject::hasFeatures() @ce, @cpp firstFeature() @ce,
    @cpp lastFeature() @ce, @cpp SceneGraph::Object::hasChildren() @ce,
    @cpp firstChild() @ce and @cpp lastChild() @ce are deprecated, use methods on
    linked list returned by @ref SceneGraph::AbstractObject::features() and
    @ref SceneGraph::Object::children() instead.
-   @cpp Platform::ScreenedApplication::frontScreen() @ce and
    @cpp Platform::ScreenedApplication::backScreen() @ce are deprecated, use
    methods on linked list returned by
    @ref Platform::BasicScreenedApplication::screens() "Platform::ScreenedApplication::screens()"
    instead.
-   @ref Framebuffer::read() "*Framebuffer::read()" functions taking two
    vectors are deprecated, use overload taking @ref Range2Di instead.
-   The @cpp Mesh::maxVertexAttributes() @ce function is deprecated, use
    @ref AbstractShaderProgram::maxVertexAttributes() instead.
-   @cpp Math::Vector::dot() @ce, @cpp Math::Complex::dot() @ce,
    @cpp Math::Quaternion::dot() @ce, @cpp Math::Vector::angle() @ce,
    @cpp Math::Complex::angle() @ce, @cpp Math::Quaternion::angle() @ce,
    @cpp Math::Quaternion::lerp() @ce, @cpp Math::Quaternion::slerp() @ce,
    @cpp Math::Vector2::cross() @ce and @cpp Math::Vector3::cross() @ce are
    deprecated, use @ref Math::dot(), @ref Math::angle(),
    @ref Math::lerp(), @ref Math::slerp() and @ref Math::cross() instead (see
    [mosra/magnum#74](https://github.com/mosra/magnum/issues/74))
-   The @cpp *Framebuffer::bind(FramebufferTarget) @ce function is deprecated,
    use parameter-less @ref Framebuffer::bind() "*Framebuffer::bind()"
    instead.
-   The @cpp FramebufferTarget::ReadDraw @ce enum value is deprecated, use
    separate @cpp FramebufferTarget::Read @ce and @cpp FramebufferTarget::Draw @ce
    values instead.
-   @ref CubeMapTexture::imageSize() with explicit face parameter is
    deprecated, use overload that returns one value for all faces instead.
-   The `Magnum/DebugMessage.h` header is deprecated, use
    @ref Magnum/DebugOutput.h instead (see [mosra/magnum#89](https://github.com/mosra/magnum/pull/89))
-   The @cpp DebugMessage::Severity @ce enum is deprecated, use
    @ref DebugOutput::Severity instead.
-   The @cpp DebugMessage::Callback @ce typedef, @cpp DebugMessage::setCallback() @ce
    and @cpp DebugMessage::setDefaultCallback() @ce function is deprecated, use
    @ref DebugOutput::Callback, @ref DebugOutput::setCallback() and
    @ref DebugOutput::setDefaultCallback() instead.
-   The @cpp DebugMessage::maxLoggedMessages() @ce and
    @cpp DebugMessage::maxMessageLength() @ce functions are deprecated, use
    @ref DebugOutput::maxLoggedMessages() and
    @ref DebugOutput::maxMessageLength() instead.
-   The @cpp DebugMessage::setEnabled() @ce function and related values from
    @cpp DebugMessage::Source @ce enum are deprecated, use
    @ref DebugOutput::setEnabled() along with @ref DebugOutput::Source,
    @ref DebugOutput::Type and @ref DebugOutput::Severity instead.
-   Parameter-less @cpp *Query @ce constructor and parametrized
    @cpp *Query::begin() @ce function are deprecated, use constructor with
    parameter and parameter-less @ref Query::begin() "*Query::begin()"
    instead.

@subsection changelog-2015-05-compatibility Potential compatibility breakages, removed APIs

-   All functionality @ref changelog-2014-01-deprecated "deprecated in 2014.01"
    has been removed, namely:
    -   Removed deprecated ability to use relative includes (e.g.
        @cpp #include <Mesh.h> @ce), use absolute paths (@cpp #include <Magnum/Mesh.h> @ce)
        instead.
    -   Removed deprecated @cpp Mesh::Primitive @ce enum, use @ref MeshPrimitive
        instead.
    -   Removed deprecated @cpp Sampler::maxAnisotropy() @ce function, use
        @ref Sampler::maxMaxAnisotropy() instead.
    -   Removed deprecated @cpp Math::Geometry::Rectangle @ce class, use
        @ref Math::Range instead.
    -   Removed deprecated @cpp SceneGraph::Animable::group() @ce function, use
        @ref SceneGraph::Animable::animables() instead.
    -   Removed deprecated `Shaders/magnumShadersResourceImport.hpp` file, use
        `Shaders/resourceImport.hpp` instead.
    -   Removed deprecated @cpp Text::TextRenderer @ce alias, use
        @ref Text::Renderer instead.
    -   Removed long-deprecated @ref BufferImage::setData() overload, use the
        other one instead.

@subsection changelog-2015-05-performance Performance improvements

-   Faster vector multiplication in @ref Math::Quaternion.
-   Saved one swizzle in @ref Math::cross().
-   Allocation-free overloads of functions that took @cpp std::string @ce just to
    pass its contents to OpenGL.

@section changelog-2014-06 2014.06

Released 2014-06-30, tagged as
[v2014.06](https://github.com/mosra/magnum/releases/tag/v2014.06). See the
[release announcement](http://blog.magnum.graphics/announcements/june-2014-updates/)
for a high-level overview.

@subsection changelog-2014-06-dependencies Dependency changes

-   Minimal required GCC version is now 4.7. Support for GCC 4.6 has been moved
    to `compatibility` branch (see [mosra/magnum#18](https://github.com/mosra/magnum/issues/18))

@subsection changelog-2014-06-new New features

-   Experimental Android support, see @ref building-cross-android "building documentation"
    for more information
-   Initial implementation of @ref Platform::AndroidApplication class
-   @ref Platform::WindowlessWglApplication and @ref Platform::WindowlessCglApplication,
    which enable @ref magnum-info "magnum-gl-info", @ref magnum-distancefieldconverter
    and @ref magnum-fontconverter utilities on OS X and Windows. See
    [mosra/magnum#40](https://github.com/mosra/magnum/issues/40) and
    [mosra/magnum#59](https://github.com/mosra/magnum/pull/59).
-   @ref Trade::ObjImporter "ObjImporter" plugin, mesh import only (no
    materials yet)
-   Completed support of @extension{EXT,texture_integer},
    @extension{ARB,stencil_texturing}, @extension{ARB,texture_rectangle},
    @extension{ARB,texture_buffer_object}, @extension{ARB,texture_swizzle},
    @extension{EXT,texture_sRGB_decode} extensions (and related ES extensions) and
    other missing parameters in @ref Texture "*Texture" classes
-   Basic support for @extension{ARB,texture_multisample} and
    @extension{ARB,texture_storage_multisample} in new @ref MultisampleTexture
    class
-   Instanced rendering, base vertex and base instance specification in
    @ref Mesh and @ref MeshView classes; @ref Mesh::addVertexBufferInstanced()
    function for adding buffers with per-instance data (see
    [mosra/magnum#47](https://github.com/mosra/magnum/issues/47))
-   Mesh multi-draw using @ref MeshView::draw()
-   Initial @extension{ARB,multi_bind} support with @ref AbstractTexture::bind()
-   Support for @extension{ARB,vertex_type_10f_11f_11f_rev} in
    @cpp AbstractShaderProgram::Attribute::DataType @ce
-   New variants of @ref Shader::compile() and @ref AbstractShaderProgram::link(),
    allowing the driver to perform paralell compilation in multiple threads.
-   Added @ref Texture::maxSize() "*Texture::maxSize()" queries
-   @ref MeshTools::compile() for automagic creation of 2D and 3D meshes from
    imported data
-   @ref MeshTools::interleaveInto() for interleaving data into existing
    buffer
-   @ref Shapes::Shape::collision() function as complement to
    @ref Shapes::Shape::collides()
-   @ref Platform::GlutApplication::KeyEvent finally has more complete key
    support
-   @ref Math::Range::data() function, useful when querying range values from
    GL
-   Support for specifying context flags using
    @ref Platform::Sdl2Application::Configuration::setFlags() "Platform::*Application::Configuration::setFlags()",
    they are now also shown in @ref magnum-gl-info "magnum-info"
-   More robust support for driver detection and driver bug workarounds. Driver
    can be detected using @ref Context::detectedDriver(), problematic
    extension disabled, which is then shown in @ref magnum-info "magnum-info"
    and can be also queried using @ref Context::isExtensionDisabled()
-   @ref Context::extensionStrings() for getting list of all extension
    strings exposed by the driver
-   @ref Context::resetState() for resetting internal state tracker, allowing
    to use Magnum along with third-party OpenGL code (see
    [mosra/magnum#48](https://github.com/mosra/magnum/issues/48))
-   @ref MAGNUM_TARGET_WEBGL CMake and preprocessor variable

@subsection changelog-2014-06-changes Changes

-   Libraries and plugins in debug build configuration are installed to
    different locations, making it possible to have debug and release libraries
    installed alongside each other (see
    [mosra/magnum#20](https://github.com/mosra/magnum/issues/20),
    [mosra/magnum#45](https://github.com/mosra/magnum/issues/18))
-   @ref Platform::Sdl2Application is now used everywhere (documentation,
    tutorials, examples) by default, replacing @ref Platform::GlutApplication.
    The GLUT application is still available, though. See
    [mosra/magnum#39](https://github.com/mosra/magnum/issues/39).
-   The need for compiler compatibility mode is now automatically detected by
    CMake to avoid strange compilation errors later
-   Split out @ref Texture functionality into dedicated @ref TextureArray,
    @ref MultisampleTexture and @ref RectangleTexture classes to make their
    usage less error-prone
-   @ref Buffer::invalidateData(), @ref Buffer::invalidateSubData() and
    @ref Renderer::resetNotificationStrategy() functions are enabled on
    OpenGL ES as a no-op
-   Added @ref std::vector overload of @ref MeshTools::combineIndexArrays()
    for greater runtime-usage flexibility
-   @ref Platform::Sdl2Application now defaults to non-resizable window, you
    can change the behavior using @ref Platform::Sdl2Application::Configuration::setWindowFlags()
-   It's now possible to import objects without materials
-   More robust OpenGL version checks when creating context
-   Thorough documentation review, fixes and improvements

@subsection changelog-2014-06-buildsystem Build system

-   Avoiding unnecessary linking of the OpenGL library (see
    [mosra/magnum#60](https://github.com/mosra/magnum/pull/60))

@subsection changelog-2014-06-bugfixes Bug fixes

-   Fixed usage with OpenGL ES 3.1 contexts (it complained about invalid
    version)
-   Fixed compilation of Shaders::MeshVisualizer under WebGL and with ANGLE,
    see [mosra/magnum#56](https://github.com/mosra/magnum/issues/56)
-   Fixed various build issues on Mac OS X, see
    [mosra/magnum#51](https://github.com/mosra/magnum/issues/51) and
    [mosra/magnum#54](https://github.com/mosra/magnum/issues/54)

@subsection changelog-2014-06-deprecated Deprecated APIs

-   @cpp Mesh::setVertexCount() @ce and @cpp Mesh::setIndexCount() @ce had
    nonintuitive behavior in some corner cases and are deprecated, use general
    @ref Mesh::setCount() function instead
-   @cpp MeshView::setVertexRange() @ce and four-/two-argument
    @cpp MeshView::setIndexRange() @ce are deprecated for similar reason as
    above, use @ref MeshView::setCount(), @ref MeshView::setBaseVertex()
    and three-/one-argument @ref MeshView::setIndexRange() instead
-   @cpp Texture::Target @ce enum is deprecated as the API was too error-prone,
    use dedicated @ref TextureArray, @ref MultisampleTexture and
    @ref RectangleTexture classes instead
-   @cpp Framebuffer::attachTexture*D() @ce is deprecated, use more generic
    @ref Framebuffer::attachTexture() and
    @ref Framebuffer::attachTextureLayer() instead
-   @cpp FramebufferBlit::*Buffer @ce enum values are deprecated, use shorter
    @ref FramebufferBlit::Color and similar instead
-   @ref Audio::Source::play(), @ref SceneGraph::AbstractObject::setClean(),
    @ref SceneGraph::AbstractObject::transformationMatrices() and similar
    taking @ref std::initializer_list of pointers are deprecated, use versions
    taking list of references instead
-   @ref MeshTools::compressIndices() and @ref MeshTools::interleave()
    which filled @ref Mesh and @ref Buffer directly are deprecated as they
    had undesired side-effects in some cases, use the data-returning versions
    instead and then configure mesh and buffer manually
-   @ref MeshTools::combineIndexedArrays() taking @ref std::tuple is
    deprecated, use version taking @ref std::pair instead
-   @ref MeshTools::removeDuplicates() taking also list of indices is
    deprecated, use the function in conjunction with @ref MeshTools::duplicate().
    See function documentation for more information.
-   Parameter-less @ref Mesh::draw() and @ref MeshView::draw() are
    deprecated, use versions with explicit shader parameter instead
-   Deprecated implicit conversion of @ref Resource "Resource<T, U>" to
    @cpp U& @ce, as it is not safe. Use explicit dereference operator instead.
-   Texture binding using @ref Texture::bind() "*Texture::bind()" is
    deprecated, use setup functions of particular shaders instead (e.g.
    @ref Shaders::Phong::setDiffuseTexture())
-   @cpp Context::Flag::Robustness @ce is deprecated, use
    @ref Context::Flag::RobustAccess which reflects OpenGL naming better
    instead
-   @cpp Texture::maxLayers() @ce has misleading naming and is deprecated, use
    @ref Shader::maxCombinedTextureImageUnits() instead

@subsection changelog-2014-06-compatibility Potential compatibility breakages, removed APIs

-   All functionality @ref changelog-2013-10-deprecated "deprecated in 2013.10"
    has been removed, namely:
    -   Removed deprecated raw-pointer versions of @ref Buffer::setData() and
        @ref Buffer::setSubData(), use overloads taking
        @cpp Containers::ArrayReference @ce instead
    -   Removed deprecated `Magnum/ImageFormat.h` header and
        @cpp ImageFormat @ce/@cpp ImageType @ce enums, use `Magnum/ColorFormat.h`
        header and @cpp ColorFormat @ce/@cpp ColorType @ce enums instead
    -   Removed deprecated @cpp Matrix2 @ce and @cpp Matrix2d @ce typedefs, use
        :ref:`Matrix2x2` and :ref:`Matrix2x2d` instead
    -   Removed deprecated `Magnum/Swizzle.h` header and @cpp Magnum::swizzle() @ce
        function, use @ref Magnum/Math/Swizzle.h and @ref Math::swizzle()
        instead
    -   Removed deprecated @cpp *::maxSupported*() @ce limit queries, use the
        less verbose @cpp *::max*() @ce versions instead
    -   Removed deprecated @cpp Platform::*Application::InputEvent::Modifier::*Button @ce
        enum values, use @ref Platform::Sdl2Application::MouseMoveEvent::buttons() "Platform::*Application::*Event::buttons()"
        function and @ref Platform::Sdl2Application::MouseMoveEvent::Button "Platform::*Application::*Event::Button"
        enum instead
    -   @cpp Platform::Sdl2Application::Configuration::Flag @ce enum and related
        functions were replaced with WindowFlag, as the name would now conflict
        with context flags

@subsection changelog-2014-06-internal Internal changes

-   Removed last remaining bits of global state, everything is now stored
    per-context.

@section changelog-2014-01 2014.01

Released 2014-01-21, tagged as
[v2014.01](https://github.com/mosra/magnum/releases/tag/v2014.01). See the
[release announcement](http://blog.magnum.graphics/announcements/january-2014-updates/)
for a high-level overview.

@subsection changelog-2014-01-dependencies Dependency changes

No dependency changes in this release.

@subsection changelog-2014-01-new New features

-   MSVC 2013 support in `compatibility` branch
-   Dependency-less plugins from Magnum Plugins repository are now part of
    Magnum to make their usage easier, in particular the @ref Text::MagnumFont "MagnumFont",
    @ref Text::MagnumFontConverter "MagnumFontConverter",
    @ref Trade::TgaImporter "TgaImporter", @ref Trade::TgaImageConverter "TgaImageConverter"
    and @ref Audio::WavImporter "WavAudioImporter" plugins.
-   Documented @ref opengl-support "state of OpenGL support",
    @ref opengl-mapping "mapping between OpenGL and Magnum API",
    @ref plugins "general plugin usage" and added
    @ref troubleshooting "troubleshooting page" for most common building and
    rendering issues
-   Support for horizontal and vertical text alignment and multi-line text in
    @ref Text::Renderer (line wrapping is still left up to the user)
-   New @ref magnum-fontconverter utility for converting between font formats
    (e.g. creating distance-field raster font from TTF font). Enable it with
    `WITH_FONTCONVERTER` CMake option (currently Linux only), see
    `magnum-fontconverter --help` for more information.
-   Support for OpenGL object labels, debug message insertion and retrieval
    (@extension{KHR,debug}, @extension{EXT,debug_label} and @extension{EXT,debug_marker}
    extensions) (see [mosra/magnum#42](https://github.com/mosra/magnum/issues/42))
-   @ref Platform::BasicScreenedApplication "Platform::ScreenedApplication"
    class allowing the users to easily use multiple independent screens in the
    application.
-   New 1D, 2D and 3D @ref Math::Range class
-   Added @cpp red() @ce, @cpp green() @ce, @cpp blue() @ce, @cpp cyan() @ce,
    @cpp magenta() @ce and @cpp yellow() @ce convenience functions to @ref Color3
    and @ref Color4 classes
-   Convenience @ref Color3ub and @ref Color4ub typedefs
-   New @ref version() utility functions for converting @ref Version enum
    value to major/minor version number and back
-   Added @cpp release() @ce function to @ref Image and @ref Trade::ImageData
    for releasing ownership of the data, similar to @ref std::unique_ptr::release()
    (see [mosra/magnum#29](https://github.com/mosra/magnum/issues/29))
-   @cpp *Image::dataSize() @ce function for computing size of buffer required
    to store image of given size
-   Disallowing conversion of rvalue @ref Image and @ref Trade::ImageData
    to ImageReference as it would result in access to deleted memory (GCC
    4.8.1/Clang only)
-   No-op fallback for @ref Texture::setMaxAnisotropy() "*Texture::setMaxAnisotropy()"
    in case @extension{EXT,texture_filter_anisotropic extension} is not supported
-   Added @cpp round() @ce, @cpp floor() @ce and @cpp ceil() @ce scalar/vector
    functions to @ref Math namespace
-   @ref Math::minmax() and @ref Math::Vector2::minmax() functions
-   Modulo operations for integral @ref Math::Vector classes
-   Ability to request context version in all windowed
    @ref Platform::Sdl2Application "Platform::*Application" classes
-   Mouse wheel support in @cpp Platform::NaClApplication::MouseEvent @ce
-   No-op @ref Platform::GlutApplication::keyReleaseEvent() and
    @cpp Platform::NaClApplication::Configuration::setTitle() @ce functions to
    preserve source compatibility with other application classes.
-   @ref SceneGraph::Drawable::drawables() function as a non-ambiguous
    alternative to @cpp group() @ce
-   Ability to specify background color color in @ref Shaders::Vector,
    allowing it to use without blending enabled (fully transparent black was
    used previously)
-   New @ref Shaders::Generic class with common definitions, so you can
    configure mesh for the generic shader and render it with any other
    compatible shader
-   Convenience @cpp hasNormals() @ce, @cpp hasTextureCoords2D() @ce functions to
    @ref Trade::MeshData2D and @ref Trade::MeshData3D
-   OpenGL ES 3.0 build now shares list of vendor extensions with OpenGL ES 2.0
    build (i.e. only those extensions that aren't part of ES 3.0 are present in
    @ref Magnum::Extensions)
-   All classes in documentation are now shown with corresponding @cpp #include @ce
    path

@subsection changelog-2014-01-changes Changes

-   Preferring absolute includes instead of relative (see [mosra/magnum#36](https://github.com/mosra/magnum/issues/36))
-   The `magnum-distancefield` utility is now named @ref magnum-distancefieldconverter
    for consistency with other command-line utilities
-   @cpp ImageReference @ce class now stores const data pointer instead of
    mutable one, modifying the data through the class interface isn't valid use
    case anyway
-   Added default template parameter to @ref Buffer::data() and made
    @ref Image::data() "*Image::data()" templated to have them consistent.
    Note that this is source-compatible change.
-   @cpp Query::result<bool>() @ce returns @cpp true @ce if value is nonzero
    (was returning @cpp true @ce only for value of 1 previously)
-   All functions in @ref MeshTools namespace are now returning either
    @ref Corrade::Containers::Array or @ref std::unique_ptr instead of naked
    pointers to avoid accidental out-of-bounds access and memory leaks
-   All functions in @ref Text namespace are now returning @ref std::unique_ptr
    instead of naked pointers to avoid accidental memory leaks
-   Implementation of @ref Platform::Sdl2Application::viewportEvent() "Platform::*Application::viewportEvent()"
    is not required anymore, because in many cases the application doesn't need
    to react to window resize events at all
-   Textured @ref Shaders::Flat now multiplies texture with the specified
    color instead of ignoring it. See also [mosra/magnum#34](https://github.com/mosra/magnum/issues/34)
-   All deprecated functions and types are now emitting compiler warnings to
    encourage updating the code
-   Various documentation and example updates and improvements

@subsection changelog-2014-01-bugfixes Bug fixes

-   Fixed @ref CubeMapTextureArray::image() function (more precisely it
    wasn't working at all). See also [mosra/magnum#31](https://github.com/mosra/magnum/issues/31).
-   Fixed wrong assertion in @ref Texture::setWrapping() for rectangle
    textures
-   Fixed wrong assertion in @cpp AbstractImage::pixelSize() @ce when computing
    size of separate depth and stencil formats
-   @ref Mesh::addVertexBuffer() now properly computes offsets for matrix
    attributes
-   Taking index buffer offset into account in @ref MeshView class
-   Fixed various issues with textured @ref Shaders::Flat shader (actually
    the textured version was not working at all)
-   Various OS X-related fixes in @ref Shaders library. See also
    [mosra/magnum#27](https://github.com/mosra/magnum/issues/27).
-   Fixed building issues when both SDL1 and SDL2 is installed on OS X. See
    also [mosra/magnum#25](https://github.com/mosra/magnum/issues/25),
    [mosra/magnum#38](https://github.com/mosra/magnum/pull/38).
-   Fixed building issues with CMake-generated XCode project on OS X. See also
    [mosra/magnum#37](https://github.com/mosra/magnum/issues/37).
-   Proper and failsafe OpenGL 3 context creation on OS X (3.0 is implemented
    only as core context, thus requesting 2.1 won't expose newer features). See
    also [mosra/magnum#26](https://github.com/mosra/magnum/issues/26),
    [mosra/magnum#35](https://github.com/mosra/magnum/issues/35) and
    [mosra/magnum#43](https://github.com/mosra/magnum/pull/43).
-   Fixed compilation issues with Clang and libc++
-   Fixed various compilation issues under MSVC (and worked around an insane
    amount of compiler bugs)

@subsection changelog-2014-01-deprecated Deprecated APIs

-   @cpp Buffer::Usage @ce enum is deprecated to reduce header dependencies, use
    global @ref BufferUsage enum instead
-   @cpp Mesh::Primitive @ce enum is deprecated to reduce header dependencies,
    use global @ref MeshPrimitive enum instead
-   @cpp Sampler::maxAnisotropy() @ce is deprecated to avoid naming conflict with
    @ref Texture::setMaxAnisotropy() "*Texture::setMaxAnisotropy()", use
    @ref Sampler::maxMaxAnisotropy() instead
-   @cpp Magnum::Geometry::Rectangle @ce class (and @cpp Rectangle* @ce typedefs)
    is deprecated, use more generic and feature-rich @ref Math::Range
    instead.
-   @cpp Platform::Sdl2Application::Configuration::setFlags() @ce function and
    related enum is deprecated to avoid naming conflict in the future, use @ref Platform::Sdl2Application::Configuration::setWindowFlags() instead
-   @cpp SceneGraph::Animable::group() @ce is deprecated, use non-ambiguous
    @ref SceneGraph::Animable::animables() instead
-   `Magnum/Shaders/magnumShadersResourceImport.hpp` header is deprecated in
    favor of less verbose `Magnum/Shaders/resourceImport.hpp`
-   @cpp Text::TextRenderer @ce class (and @cpp Text::TextRenderer2D @ce,
    @cpp Text::TextRenderer3D @ce typedefs) is deprecated, use less redundant
    name @ref Text::Renderer instead

@subsection changelog-2014-01-compatibility Potential compatibility breakages, removed APIs

-   Removed @cpp SceneGraph::*Transformation::move() @ce from 2D transformation
    classes. It was originally meant for modifying draw order, but as the draw
    order is managed by @ref SceneGraph::DrawableGroup class and not by
    parent object, this function is essentially useless.

@subsection changelog-2014-01-documentation Documentation

-   Various documentation updates and fixes (see
    [mosra/magnum#28](https://github.com/mosra/magnum/issues/28))

@subsection changelog-2014-01-internal Internal changes

-   Added thorough tests for all core OpenGL functionality to make refactoring
    easier
-   Various internal optimizations and cleanup to make maintenance easier
-   Using Jenkins Continuous Integration to maintain compilable and bug-free
    state of the project more easily. Currently GCC 4.8, 4.7, 4.6, 4.5, 4.4,
    Clang 3.3, Clang 3.3 with libc++, Emscripten, x86-32/x86-64 Native Client
    and MinGW32 compilers are tested with both shared and static libraries.
    Separately testing builds with deprecated features enabled and disabled.
    Also explicitly testing desktop OpenGL, OpenGL ES 2.0, desktop OpenGL ES
    2.0 emulation, OpenGL ES 3.0 and desktop OpenGL ES 3.0 emulation.
-   All files from `src/` directory were moved to `src/Magnum`,
    `external/` directory was moved to `src/MagnumExternal` (required to
    make inter-project includes absolute, as mentioned above)

@section changelog-2013-10 2013.10

Released 2013-10-30, tagged as
[v2013.10](https://github.com/mosra/magnum/releases/tag/v2013.10). See the
[release announcement](http://blog.magnum.graphics/announcements/october-2013-updates/)
for a high-level overview.

@subsection changelog-2013-10-dependencies Dependency changes

-   Removed GLEW dependency in favor of built-in `glLoadGen`, resulting in
    greatly reduced compilation time and less compatibility issues. The base
    library thus now depends only on Corrade and OpenGL libraries. See
    [mosra/magnum#11](https://github.com/mosra/magnum/issues/11),
    [mosra/magnum#16](https://github.com/mosra/magnum/issues/16),
    [mosra/magnum#21](https://github.com/mosra/magnum/issues/21),
    [mosra/magnum#22](https://github.com/mosra/magnum/issues/22),
    [mosra/magnum#23](https://github.com/mosra/magnum/pull/23).

@subsection changelog-2013-10-new New features

-   Initial Emscripten (HTML5/WebGL) port. See @ref Platform::Sdl2Application
    for detailed porting information. The @ref example-index "examples page"
    has now links to online Emscripten demos, see also
    [base-emscripten](https://github.com/mosra/magnum-bootstrap/tree/base-emscripten)
    branch in Magnum Bootstrap.
-   Mac OS X port (thanks to Miguel Martin)
-   @ref Math::Vector::isZero() and @ref Math::Vector2::aspectRatio()
    convenience functions
-   Bitwise AND, OR, XOR, bit inversion and bit shift in integral
    @ref Math::Vector classes
-   @ref Math::Matrix4x3 "Math::MatrixMxN<T>" and
    @ref Math::Matrix3x3 "Math::MatrixNxN<T>" template aliases for non-square
    and non-transforming square matrices in @ref Math namespace,
    @ref Matrix3x2 "MatrixNxN" and @ref Matrix2x2d "MatrixNxNd" typedefs for
    @cpp float @ce and @cpp double @ce non-transforming square matrices in root
    Magnum namespace. Note that template aliases are not present in GCC 4.6
    builds.
-   Limit queries for all OpenGL objects, the information is now printed also
    by @ref magnum-gl-info "magnum-info" utility.
-   @ref Context::isExtensionSupported() is now able to query extension
    availability on particular GLSL version
-   Using @ref std::unique_ptr and C++1y @cpp std::optional @ce for resources
    returned from @ref Trade::AbstractImporter for better usability and to
    avoid accidental memory leaks
-   New translation-only transformation in @ref SceneGraph supporting also
    purely integral coordinates, useful e.g. for UI or 2D platformers.
-   Detailed collision queries and new @ref Shapes::InvertedSphere "InvertedSphere"
    shape in Shapes library
-   Texture support in @ref Shaders::Flat
-   Mouse button queries in @ref Platform::Sdl2Application::MouseMoveEvent "Platform::*Application::MouseMoveEvent"

@subsection changelog-2013-10-changes Changes

-   @ref Buffer::setData() and @ref Buffer::setSubData() are now accepting
    @ref Containers::ArrayReference for more convenient usage
-   @ref Platform::Sdl2Application::viewportEvent() "Platform::*Application::viewportEvent()"
    is not called at all if window size doesn't change, allowing for less
    cumbersome ofscreen rendering setups
-   Removed redundant operators from @ref Math::RectangularMatrix "Math::*Matrix",
    use vectors for component-wise multiplication and division instead
-   Documentation updates and improvements to make the library more accessible
    for newcomers
-   Various build system updates for better compile times and easier
    installation

@subsection changelog-2013-10-bugfixes Bug fixes

-   Fixed compilation with Clang and libc++ (see
    [mosra/magnum#12](https://github.com/mosra/magnum/issues/12))
-   Fixes compilation of the Audio library on macOS (see
    [mosra/magnum#19](https://github.com/mosra/magnum/issues/19))
-   Fixed compatibility of builtin shaders with GLSL 1.20 and GLSL ES 1.00,
    added shader compilation tests to prevent this issue from reappearing (see
    [mosra/magnum#17](https://github.com/mosra/magnum/issues/17))
-   Extension support queries depend on selected GLSL version (see
    [mosra/magnum-examples#3](https://github.com/mosra/magnum-examples/issues/3))

@subsection changelog-2013-10-deprecated Deprecated APIs

-   @cpp Matrix2 @ce and @cpp Matrix2d @ce is deprecated, use @ref Matrix2x2
    and @ref Matrix2x2d instead
-   @cpp swizzle() @ce is deprecated, all of its functionality has been moved
    into @ref Math::swizzle()
-   @cpp Buffer::setData() @ce and @cpp Buffer::setSubData() @ce overloads
    taking pair of data pointer and size are deprecated, use
    @cpp Containers::ArrayReference @ce-based @ref Buffer::setData() and
    @ref Buffer::setSubData()
-   `ImageFormat.h` header, @cpp ImageFormat @ce and @cpp ImageType @ce enums
    are deprecated, use `ColorFormat.h` header, `ColorFormat` and `ColorType`
    enums which reflect OpenGL naming better instead
-   @cpp Platform::*Application::InputEvent::Modifier::*Button @ce enum values
    are deprecated, use
    @ref Platform::Sdl2Application::MouseMoveEvent::buttons() "Platform::*Application::*Event::buttons()"
    and @ref Platform::Sdl2Application::MouseMoveEvent::Button "Platform::*Application::*Event::Button"
    enum instead
-   @cpp AbstractShaderProgram::maxSupportedVertexAttributeCount() @ce,
    @cpp AbstractTexture::maxSupportedLayerCount() @ce and
    @cpp Sampler::maxSupportedAnisotropy() @ce are deprecated in favor of less
    verbose @ref AbstractShaderProgram::maxVertexAttributes(),
    @cpp AbstractTexture::maxLayers() @ce and @cpp Sampler::maxAnisotropy() @ce

@subsection changelog-2013-10-compatibility Potential compatibility breakages, removed APIs

No deprecated API was removed in this release.

@section changelog-2013-08 2013.08

Released 2013-08-30, tagged as
[v2013.08](https://github.com/mosra/magnum/releases/tag/v2013.08). See the
[project announcement](http://blog.magnum.graphics/announcements/introducing-magnum/)
for a high-level overview.

*/

}
